/*
 * hunt-time: A time library for D programming language.
 *
 * Copyright (C) 2015-2018 HuntLabs
 *
 * Website: https://www.huntlabs.net/
 *
 * Licensed under the Apache-2.0 License.
 *
 */

module hunt.time.format;


import hunt.time.util.Locale;
import hunt.collection.Map;

/**
 * A helper class to map a zone name to metazone and back to the
 * appropriate zone id for the particular locale.
 * <p>
 * The zid<->metazone mappings are based on CLDR metaZones.xml.
 * The alias mappings are based on Link entries _in tzdb data files and
 * CLDR's supplementalMetadata.xml.
 */
class ZoneName {

    public static string toZid(string zid, Locale locale) {
        string mzone = zidToMzone.get(zid);
        if (mzone is null && aliases.containsKey(zid)) {
            zid = aliases.get(zid);
            mzone = zidToMzone.get(zid);
        }
        if (mzone !is null) {
            Map!(string, string) map = mzoneToZidL.get(mzone);
            if (map !is null && map.containsKey(locale.getCountry())) {
                zid = map.get(locale.getCountry());
            } else {
                zid = mzoneToZid.get(mzone);
            }
        }
        return toZid(zid);
    }

    public static string toZid(string zid) {
        if (aliases.containsKey(zid)) {
            return aliases.get(zid);
        }
        return zid;
    }

    private static final string[] zidMap = new string[] {
        // From metaZones.xml
%%%%ZIDMAP%%%%

        // From tzdb
        "Africa/Khartoum", "Africa_Central", "Africa/Maputo", // tzdata2017c
        "Africa/Windhoek", "Africa_Central", "Africa/Maputo", // tzdata2017c
        "Africa/Sao_Tome", "Africa_Western", "Africa/Lagos",  // tzdata2018c
    };
    private static final string[] mzoneMap = new string[] {
        // From metaZones.xml
%%%%MZONEMAP%%%%

        // From tzdb
        "Africa_Western", "ST", "Africa/Sao_Tome", // tzdata2018c
    };
    private static final string[] aliasMap = new string[] {
        // From supplementalMetadata.xml
%%%%DEPRECATED%%%%

        // From tzdb
%%%%TZDATALINK%%%%
    };

    private static final Map!(string, string) zidToMzone = new HashMap<>();
    private static final Map!(string, string) mzoneToZid = new HashMap<>();
    private static final Map<string, Map!(string, string)> mzoneToZidL = new HashMap<>();
    private static final Map!(string, string) aliases = new HashMap<>();

    static {
        for (int i = 0; i < zidMap.length; i += 3) {
            zidToMzone.put(zidMap[i], zidMap[i + 1]);
            mzoneToZid.put(zidMap[i + 1], zidMap[i + 2]);
        }

        for (int i = 0; i < mzoneMap.length; i += 3) {
            string mzone = mzoneMap[i];
            Map!(string, string) map = mzoneToZidL.get(mzone);
            if (map is null) {
                map = new HashMap<>();
                mzoneToZidL.put(mzone, map);
            }
            map.put(mzoneMap[i + 1], mzoneMap[i + 2]);
        }

        for (int i = 0; i < aliasMap.length; i += 2) {
            aliases.put(aliasMap[i], aliasMap[i + 1]);
        }
    }
}
